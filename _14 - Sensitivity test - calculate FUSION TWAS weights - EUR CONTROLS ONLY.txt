# EUR only first, entire cohort (cases and controls, 563).
            # Check the percentage of SNPs in the FUSION LD reference available in the target data .
            conda activate fusion_final
            mkdir -p /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only && cd /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only
            
            target_plink="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/genotype_cmc1_cmc3_imputed/genotypes_EUR_12_controls_only_2"
            ld_ref_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF"
            results_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only"
            
            Rscript ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_fusion_ref_overlap_checker.R \
            --ld_ref_dir ${ld_ref_dir} \
            --PLINK_prefix ${target_plink} \
            --output ${results_dir}/overlap_ldref_and_genotype_files.txt

            # Number of SNPs in FUSION LD Reference = 3091877
            # Number of SNPs in target PLINK files = 4285087
            # Number of SNPs in both = 3060216
            # Percentage of SNPs in FUSION LD Reference that are in the target PLINK files = 98.97599% # Perfect. 3M SNPs present in both. Sounds like good coverage.

            ##############################   ~/20240205_fusion_weights_EUR_controls_only_1.sh
            #!/bin/bash -l
            #SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job arrays master job allocation number; %a = Job array ID (index) number.
            #SBATCH -p cpu								# Request a shared node
            #SBATCH --time=24:00:00 							# format: days-hours:minutes.
            #SBATCH --mem-per-cpu=20000	
            #SBATCH --ntasks=1									# requests x cores from any node, per task.
            # # specify manually to do tests before running: SBATCH --array=1-1000 
            trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG

            conda activate fusion_final

            cd ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline # it has to run from this folder!
            target_plink=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/genotype_cmc1_cmc3_imputed/genotypes_EUR_12_controls_only_2
            ld_ref_dir=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF
            phenotype_file=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_242_EUR_controls_only/phenotype_file_adjusted_genes_and_hervs_hg19_EUR_controls_only.txt
            plink=/users/k1642468/scratch/programs/plink
            gemma=/users/k1642468/scratch/programs/gemma-0.98.1-linux-static
            gcta=/users/k1642468/scratch/programs/fusion_twas-master/gcta_nr_robust
            fusion_software=/users/k1642468/scratch/programs/fusion_twas-master
            output=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1
            mkdir -p $output

            coordinate_file=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_242_EUR_controls_only/coordinates_file_genes_and_hervs_hg19.txt
            LENGTH_COORDINATE_FILE=$(< "${coordinate_file}" wc -l)

            # `seq 0 250 18500` = {0,250,500,750,....18500} - make sure final number is divisable by mid number (18500/250), and that max number (18500+250) > length of coordinate_file
            for ITERATION in `seq 0 1500 18000`; do 

            ROWINDEX_0=$((SLURM_ARRAY_TASK_ID)) 
            ROWINDEX=$((ROWINDEX_0+${ITERATION}))
            if [ "${ROWINDEX}" -gt "${LENGTH_COORDINATE_FILE}" ] ||  [ "${ROWINDEX}" = 1 ]
                then 
                    echo "Nothing to run; skipping row index number ${ROWINDEX}"
                else
                    feature_name=$(awk "NR==${ROWINDEX}" <(cut -f 4 -d ' ' ${coordinate_file}))
                    echo "Something to run; gene or HERV id is ${feature_name}. The row index is ${ROWINDEX}"
                    Rscript --vanilla ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_TWAS_weights_using_fusion.R \
                    --PLINK_prefix ${target_plink} \
                    --phenotype_file ${phenotype_file} \
                    --coordinate_file ${coordinate_file} \
                    --gene_name ${feature_name} \
                    --plink ${plink} \
                    --gcta ${gcta} \
                    --gemma ${gemma} \
                    --ld_ref_dir ${ld_ref_dir} \
                    --fusion_software ${fusion_software} \
                    --output_dir ${output}
                    yes '' | sed 5q
            fi
            done

            ##################################################
            # NOTE: this script is going to run nested "for" loops to go over all rows of coordinates_file, making sure that the index  corresponding to header is ignored (index = 1), or that indexes corresponding to rows > the number of rows in the phenotype file are also ignored. All other numbers should be run! 
            sbatch --array=1-1500 ~/20240205_fusion_weights_EUR_controls_only_1.sh # array number has to match middle value in "for ITERATION in `seq 0 XXXXX 18500`"

            #### accounting for all genes. 
            # identify all genes within the coordinates file, and minus the ones that worked, and the ones that didnt work.
            awk '{print $4}' /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_242_EUR_controls_only/coordinates_file_genes_and_hervs_hg19.txt | tail -n +2 > ~/gene_names_coordinate_files_EUR_CTRL_ONLY

            # genes that were processed successfully
            ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/*.hsq > ~/genes_analysed_hsq_EUR_CTRL_ONLY
            ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/*.RDat > ~/genes_analysed_rdat_EUR_CTRL_ONLY
            # fail messages
            grep "likely GCTA could not converge" ~/logs/20240205_fusion_weights_EUR_controls_only_1.sh-* > ~/gcta_could_not_converge_EUR_CTRL_ONLY
            grep ".bed input file does not exist" ~/logs/20240205_fusion_weights_EUR_controls_only_1.sh-* > ~/no_variants_in_cis_window_EUR_CTRL_ONLY

            wc -l ~/gene_names_coordinate_files_EUR_CTRL_ONLY # 18748
            wc -l ~/genes_analysed_hsq_EUR_CTRL_ONLY          # 18371
            wc -l ~/genes_analysed_rdat_EUR_CTRL_ONLY         #  5780
            wc -l ~/gcta_could_not_converge_EUR_CTRL_ONLY     #  315 
            wc -l ~/no_variants_in_cis_window_EUR_CTRL_ONLY   #   62

            # final report:
            18748 genes in coordinates file                                         # ~/gene_names_coordinate_files
                18371 hsq files                                                     # ~/genes_analysed_hsq
                    5780  genes with RDat files too (will be used for TWAS)         # ~/genes_analysed_rdat
                    12591  hsq file, but no RDat file (i.e., no heritability)         # ~/genes_analysed_hsq - ~/genes_analysed_rdat
                315 GCTA could not converge (no hsq/rdat)                           #  ~/gcta_could_not_converge
                62 no variant in cis-window (no hsq/rdat)                           # ~/no_variants_in_cis_window
            ______________________
            # All genes accounted for.


            # Prepare freshly calculated weights for FUSION format using opain's script:
            output=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1
            coordinate_file=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_242_EUR_controls_only/coordinates_file_genes_and_hervs_hg19.txt
            conda activate fusion_final

            # made modifications to /users/k1642468/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_packaging_fusion_weights.R to avoid errors (you need to manually add/remove bslmm stats if these are calculated).

            cd /users/k1642468/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline
            Rscript OP_packaging_fusion_weights.R \
            --RDat_dir ${output}/Output \
            --coordinate_file ${coordinate_file} \
            --output_name CMC \
            --output_dir ${output}/wrapped/fusion_weights

            #  nano ${output}/wrapped/CMC.profile.err
# Average hsq: 0.2725063 ( 0.00228902 )
# Average crossvalidation R2:
# R2	SE
# top1	0.197	0.00218
# blup	0.172	0.00202
# enet	0.214	0.00235
# lasso	0.214	0.00232
# bslmm	0.211	0.00228
# BEST	0.779
# % Model is best:
# top1:	29.6%
# blup:	7%
# enet:	18.3%
# lasso:	26.2%
# bslmm:	18.8%



# which HERVs have a cis-heritable expression component?
ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/*.RDat | sed 's|/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/||g' | sed 's|.wgt.RDat||g' | grep '_' > ~/hervs_with_cis_heritable_component_eur_controls_only

# which there were there before?
ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_all_1/Output/*.RDat | sed 's|/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_all_1/Output/||g' | sed 's|.wgt.RDat||g' | grep '_' > ~/hervs_with_cis_heritable_component_eur_all

# which genes have a cis-heritable expression component?
ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/*.RDat | sed 's|/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/||g' | sed 's|.wgt.RDat||g' | grep -v '_' > ~/genes_with_cis_heritable_component_eur_controls_only

# which ones there were there before?
ls /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_all_1/Output/*.RDat | sed 's|/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_all_1/Output/||g' | sed 's|.wgt.RDat||g' | grep  -v '_' > ~/genes_with_cis_heritable_component_eur_all

# find the overlaps
R
hervs_with_cis_heritable_component_eur_controls_only <- read.table("~/hervs_with_cis_heritable_component_eur_controls_only")
hervs_with_cis_heritable_component_eur_all <- read.table("~/hervs_with_cis_heritable_component_eur_all")

genes_with_cis_heritable_component_eur_controls_only <- read.table("~/genes_with_cis_heritable_component_eur_controls_only")
genes_with_cis_heritable_component_eur_all <- read.table("~/genes_with_cis_heritable_component_eur_all")

hervs_merge <- merge(hervs_with_cis_heritable_component_eur_controls_only, hervs_with_cis_heritable_component_eur_all, by="V1")
genes_merge <- merge(genes_with_cis_heritable_component_eur_controls_only, genes_with_cis_heritable_component_eur_all, by="V1")
quit("no")



# perform the schizophrenia rTWAS only.

###################### ~/fusion_SCZ_weights_EUR_controls_only_1.sh
#!/bin/bash -l
#SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job array's master job allocation number; %a = Job array ID (index) number.
#SBATCH -p cpu								# Request a shared node
#SBATCH --time=0-2:00:00 							# format: days-hours:minutes.
#SBATCH --mem-per-cpu=20000							# 9GB, in Mb - if unspecified, task will be given 1 GB only.
#SBATCH --ntasks=1									# requests x cores from any node, per task.
    # # SBATCH --array=1-22								# range%constainvalue => 1-22%4 would constrain 22 tasks to 4 at a time 

trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG
# CHR=22
conda activate fusion_final

trait="PGZ_SCZ3"
CHR=${SLURM_ARRAY_TASK_ID}
sumstats="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/gwas/multitrait/schizophrenia.gwas.fusion"
weights_pos_file="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/CMC_wrapped.pos"
weights_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1"
# Note: using the ldref from CMC, not 1000 Genomes as reference panel -  it will reduce LD misspecification with the TWAS models (as performed in Gusev, A., Mancuso, N., Won, H. et al. Transcriptome-wide association study of schizophrenia and chromatin activity yields mechanistic disease insights. Nat Genet 50, 538–548 (2018). https://doi.org/10.1038/s41588-018-0092-1)
ref_ld="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/CMC_EUR_LDREF/CHR."
out_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/"${trait}
mkdir -p ${out_dir}
fusion_software_dir="/users/k1642468/scratch/programs/fusion_twas-master"

Rscript --verbose --no-save ${fusion_software_dir}/FUSION.assoc_test.R \
--sumstats ${sumstats} \
--weights ${weights_pos_file} \
--weights_dir ${weights_dir} \
--ref_ld_chr ${ref_ld} \
--chr ${CHR} \
--out ${out_dir}/${trait}.${CHR}.dat

###############################################################################

sbatch --array=1-22 ~/fusion_SCZ_weights_EUR_controls_only_1.sh


# combine results to see whether there are significant features, without duplicating header
cd /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3
ls *.dat* | wc -l # 23 (22 chromosomes plus MHC)
head -1  PGZ_SCZ3.1.dat > SCZ_____all_chr.tsv
tail -n +2 -q PGZ_SCZ3.* >> SCZ_____all_chr.tsv

wc -l SCZ_____all_chr.tsv # 5781 - header = 5780

# how many features were included in the weights folder?
ls  /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/Output/*.RDat  | wc -l # 5780
wc -l /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/CMC_wrapped.pos # 5781 - header = 5780
# all genes accounted for.



##################
#  Multiple testing correction, and some toying with the data - Plot HERVs only, quantify how many HERVs are significant, etc.
##################
conda activate fusion_final
R
library(data.table)
twas <- fread("/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/SCZ_____all_chr.tsv", stringsAsFactors=F)
table(is.na(twas$TWAS.P))
twas <- twas[!is.na(twas$TWAS.P),]  # There were some NAs - remove!
# overwrite TWAS file to remove rows with NAs.
write.table(twas, "/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/SCZ_____all_chr.tsv", sep="\t", quote=F, row.names=F, col.names=T)
dim(twas) # 5773 (-5 rows that were removed because they had NA from fusion)

# significance relative to all genetic features tested, but showing HERVs only
# system(paste0("Rscript ~/scratch/programs/twas-plotter/TWAS-plotter/TWAS-plotter.V1.0.r --twas /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/SCZ_____all_chr_HERVs_only.tsv --sig_p ", 0.05/nrow(twas), " --width 4000 --height 2500 --output /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/TWAS_plotter_sig_unique_elements_HERVs_only_relative_all_feat"))

twas$Bonferroni <- p.adjust(twas$`TWAS.P`, method="bonferroni")
sig_file <- twas[twas$Bonferroni<0.05,]
write.table(sig_file, "/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/SCZ_____all_chr.tsv.Sig", sep="\t", quote=F, row.names=F, col.names=T)

# check how many hervs, from what families, located where, etc.
twas <- sig_file
dim(twas) # 137 significant hits
twas <- twas[ twas$ID %like% "_", ]
dim(twas) # 10
nrow(twas[twas$`TWAS.Z` < 0,]) # 5 negative
nrow(twas[twas$`TWAS.Z` > 0,]) # 5 positive
nrow(twas[twas$CHR==6,]) # 6 in MHC (6p21-22)

# breakdown by family
per_fam <- data.frame(do.call('rbind', strsplit(as.character(twas$ID),'_',fixed=TRUE)))
table(per_fam$X1)  # 6 elements from ERV316A3 (ERV3 superfamily), 1 each from HERVL18  HML3  MER4  PRIMA4.

######################
# Correlation of results with those identified in full Eur cohort
######################
conda activate fusion_final
R
library(data.table)
ctrls_twas <- fread("/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/SCZ_____all_chr.tsv", stringsAsFactors=F)
table(is.na(ctrls_twas$TWAS.P))
ctrls_twas <- ctrls_twas[!is.na(ctrls_twas$TWAS.P),]  # There were some NAs - remove!

full_cohort_twas <- fread("/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_all_1/results/schizophrenia/trait_____all_chr.tsv", stringsAsFactors=F)
table(is.na(full_cohort_twas$TWAS.P))
full_cohort_twas <- full_cohort_twas[!is.na(full_cohort_twas$TWAS.P),]  # There were some NAs - remove!

merged_twas <- merge(full_cohort_twas, ctrls_twas, by="ID")
dim(merged_twas) #  5572

# check distribution of P values
png("/scratch/prj/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/distribution_z_scores_563.png",width = 2000, height = 2000, units = "px", res=300)
hist(merged_twas$`TWAS.Z.x`, col='steelblue', main='Full cohort, distribution of Z scores')
dev.off()

png("/scratch/prj/commonmind/Rodrigo/TWAS_HERVs_SCZ/rTWAS/EUR_controls_only_1/results/PGZ_SCZ3/distribution_z_scores_242.png",width = 2000, height = 2000, units = "px", res=300)
hist(merged_twas$`TWAS.Z.y`, col='steelblue', main='Controls only, distribution of Z scores')
dev.off()

# They look centered around 0, thus normally distributed. (which makes sense, since these are Z scores) This means we better use Pearson to test correlation (not spearman)

cor.test(merged_twas$`TWAS.Z.x`,merged_twas$`TWAS.Z.y`, method="pearson")  
#
#         Pearson's product-moment correlation
#
# data:  merged_twas$TWAS.Z.x and merged_twas$TWAS.Z.y
# t = 234.85, df = 5570, p-value < 2.2e-16
# alternative hypothesis: true correlation is not equal to 0
# 95 percent confidence interval:
#  0.9505657 0.9553856
# sample estimates:
#       cor
# 0.9530359


